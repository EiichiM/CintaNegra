scalar Date
scalar Upload
scalar String


directive @auth on FIELD_DEFINITION | FIELD

type Query {
    getAllEvents:[Event]!@auth
    getIdEvent(id:ID):Event
}

type Mutation {
    createUser(user:inputUser!):User
    login(user:inputLogin!):Auth!
    createEvent(event:inputEvent!):Event! @auth
    addPhoto(photo:Upload!):String @auth
}

type User {
    _id:ID!
    name:String!
    email:String!
}

type Auth {
    status:String!
    token:String!
}

type Event {
    _id:ID!
    eventName:String
    desc:String
    price:String
    dateInit:Date
    location:Location
    user:User!
}

type Location {
    type:String!
    coordinates:[Float]!
}

input inputUser {
    name:String!
    email:String!
    password:String!
}

input inputLogin {
    email:String!
    password:String!
}

input inputEvent {
    eventName:String!
    desc:String!
    price:String
    dateInit:Date
    location:createLocation
    user:ID
}

input createLocation {
    type:String!
    coordinates:[Float]!
}